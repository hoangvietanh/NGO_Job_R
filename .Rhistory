#                 showInLegend = FALSE,
#                 type = "column",
#                 color = "#104E8B") %>%
#   hc_title(text = "Top 30 NGOs with The largest Number of Jobs from 2009 to 2017") %>%
#   hc_credits(enabled = TRUE,
#              text = "Data Source: http://www.ngocentre.org.vn",
#              style = list(fontSize = "12px")) %>%
#   hc_tooltip(valueDecimals = 0,
#              pointFormat = "Number: {point.y}") %>%
#   hc_add_theme(hc_theme_538())
u <- job %>%
group_by(org_name) %>%
count() %>%
ungroup() %>%
arrange(-n)
# u$org_name %>% unique() %>% length()
#u$n[1:20] %>% sum() / u$n %>% sum()
highchart() %>%
hc_xAxis(categories = top30$org_name[1:20]) %>%
hc_add_series(name = "Number of Jobs",
data = top30$n[1:20],
color = "#104E8B",
showInLegend = FALSE) %>%
hc_chart(type = "bar", options2d = list(enabled = TRUE, beta = 1, alpha = 1)) %>%
hc_title(text = "Top 20 NGOs with The largest Number of Jobs from 2009 to 2017") %>%
hc_credits(enabled = TRUE,
text = "Data Source: http://www.ngocentre.org.vn",
style = list(fontSize = "12px")) %>%
hc_add_theme(hc_theme_538())
```
# Phân bổ việc làm theo năm
Ngoại trừ năm 2009 chỉ có số liệu từ tháng 8, từ 2010 số lượng công việc có xu hướng tăng nhẹ cho tới năm 2015, tuy nhiên mức tăng không nhiều. Từ 2015 đến 2017 số lượng công việc có xu hướng giảm nhẹ.
```{r}
# Top 5 tổ chức có nhiều việc nhất:
top30$org_name[1:5] -> top5_org
job %<>% mutate(org_name2 = case_when(org_name %in% top5_org ~ org_name,
!org_name %in% top5_org ~ "Others"))
org_rename <- function(x) {
case_when(x == top5_org[1] ~ "SNV",
x == top5_org[2] ~ "World Vision",
x == top5_org[5] ~ "CARE",
!x %in% top5_org[c(1, 2, 5)] ~ x)
}
job %>%
group_by(org_name2, nam) %>%
count() %>%
ungroup() -> top_5_cong1
top_5_cong1$org_name2 <- org_rename(top_5_cong1$org_name2)
# top_5_cong1 %>%
#   ggplot(aes(nam, n, fill = org_name2)) +
#   geom_col(position = "stack")
top_5_cong1 %>%
hchart(hcaes(nam, n, group = org_name2), type = "column", showInLegend = TRUE) %>%
hc_plotOptions(series = list(stacking = "normal")) %>%
hc_add_theme(hc_theme_sandsignika()) %>%
hc_yAxis(title = list(text = "")) %>%
hc_xAxis(title = list(text = "")) %>%
hc_title(text = "The Number of Jobs from 2009 to 2017") %>%
hc_credits(enabled = TRUE,
text = "Data Source: http://www.ngocentre.org.vn",
style = list(fontSize = "12px"))
```
# Phân bố về việc làm được tuyển dụng theo tháng của các NGOs
Số lượng công việc được tuyển dụng thường sẽ không cao vào tháng 1 và 2 dương lịch. Đây cũng là thời điểm giáp tết Nguyên Đán. Số lượng công việc được tuyển thường đạt đỉnh cao vào tháng 8 sau đó giảm dần cho đến cuối năm và hai tháng của năm mới kế tiếp:
```{r}
job %<>% mutate(thang = month(time, label = TRUE, abbr = TRUE))
job_thang_nam <- job %>%
group_by(nam, thang) %>%
count() %>%
ungroup() %>%
arrange(thang)
# job_thang_nam %>%
#   ggplot(aes(thang, n)) +
#   geom_col() +
#   facet_wrap(~ nam, scales = "free")
# Việc theo thời gian là tháng - năm:
# highchart() %>%
#   hc_add_series(name = "Year of 2010",
#                 showInLegend = FALSE,
#                 data = job_thang_nam %>% filter(nam == 2010) %>% pull(n)) %>%
#   hc_add_series(name = "Year of 2011",
#                 showInLegend = FALSE,
#                 data = job_thang_nam %>% filter(nam == 2011) %>% pull(n)) %>%
#   hc_add_series(name = "Year of 2012",
#                 showInLegend = FALSE,
#                 data = job_thang_nam %>% filter(nam == 2012) %>% pull(n)) %>%
#   hc_add_series(name = "Year of 2013",
#                 showInLegend = FALSE,
#                 data = job_thang_nam %>% filter(nam == 2013) %>% pull(n)) %>%
#   hc_add_series(name = "Year of 2014",
#                 showInLegend = FALSE,
#                 data = job_thang_nam %>% filter(nam == 2014) %>% pull(n)) %>%
#   hc_add_series(name = "Year of 2015",
#                 showInLegend = FALSE,
#                 data = job_thang_nam %>% filter(nam == 2015) %>% pull(n)) %>%
#   hc_add_series(name = "Year of 2016",
#                 showInLegend = FALSE,
#                 data = job_thang_nam %>% filter(nam == 2016) %>% pull(n)) %>%
#   hc_add_series(name = "Year of 2017",
#                 showInLegend = FALSE,
#                 data = job_thang_nam %>% filter(nam == 2017) %>% pull(n)) %>%
#   hc_xAxis(categories = job_thang_nam$thang %>% unique()) %>%
#   hc_add_theme(hc_theme_538()) %>%
#   hc_yAxis(title = list(text = "Number of Recruited Jobs")) %>%
#   hc_title(text = "The Number of Jobs from 2010 to 2017 by Month and Year") %>%
#   hc_subtitle(text = "Data Source: http://www.ngocentre.org.vn")
```
```{r}
job %>%
group_by(thang) %>%
count() -> viec_thang
highchart() %>%
hc_add_series(data = round(viec_thang %>% pull(n) / 9, 0), showInLegend = FALSE) %>%
hc_add_theme(hc_theme_538()) %>%
hc_yAxis(title = list(text = " ")) %>%
hc_xAxis(categories = viec_thang$thang %>% unique()) %>%
hc_title(text = "Average Jobs by Month") %>%
hc_subtitle(text = "Data Source: http://www.ngocentre.org.vn")
```
```{r}
# Danh sách 10 NGOs có nhiều việc nhất:
top10_ngo <- top30$org_name[1:10]
# job %>%
#   filter(org_name %in% top10_ngo) %>%
#   group_by(org_name, thang) %>%
#   count() %>%
#   ungroup() %>%
#   ggplot(aes(thang, n)) +
#   geom_col() +
#   facet_wrap(~ org_name, scales = "free")
job %>%
filter(org_name %in% top10_ngo) %>%
group_by(org_name, thang) %>%
count() %>%
ungroup() -> top10_by_month
ten_top10 <- top10_by_month$org_name %>% unique()
# highchart() %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[1]) %>% pull(n),
#                 showInLegend = FALSE, name = ten_top10[1]) %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[2]) %>% pull(n),
#                 showInLegend = FALSE, name = ten_top10[2]) %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[3]) %>% pull(n),
#               showInLegend = FALSE, name = ten_top10[3]) %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[4]) %>% pull(n),
#                 showInLegend = FALSE, name = ten_top10[4]) %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[5]) %>% pull(n),
#                 showInLegend = FALSE, name = ten_top10[5]) %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[6]) %>% pull(n),
#                 showInLegend = FALSE, name = ten_top10[6]) %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[7]) %>% pull(n),
#                 showInLegend = FALSE, name = ten_top10[7]) %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[8]) %>% pull(n),
#                 showInLegend = FALSE, name = ten_top10[8]) %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[9]) %>% pull(n),
#                 showInLegend = FALSE, name = ten_top10[9]) %>%
#   hc_add_series(data = top10_by_month %>% filter(org_name == ten_top10[10]) %>% pull(n),
#                 showInLegend = FALSE, name = ten_top10[10]) %>%
#   hc_xAxis(categories = top10_by_month$thang %>% unique()) %>%
#   hc_yAxis(title = list(text = "Number of Recruited Jobs")) %>%
#   hc_title(text = "The Number of Jobs from 2010 to 2017 by Month for top 10 NGOs") %>%
#   hc_subtitle(text = "Data Source: http://www.ngocentre.org.vn") %>%
#   hc_add_theme(hc_theme_538())
```
```{r}
# Đoạn mới về word cloud:
# library(wordcloud)
rename_job_title <- function(x) {
x <- str_to_lower(x)
x %>%
str_replace_all("programme", "program") %>%
str_replace_all("consultancy|consultants", "consultant") %>%
str_replace_all("project|international|national|program", "")
}
# set.seed(291989)
# wordcloud(job$job_name %>% rename_job_title(),
#           max.words = 100,
#           random.order = FALSE,
#           rot.per = 0.35,
#           font = 4,
#           colors = brewer.pal(8, "Dark2"))
```
# Nhóm công việc được tuyển dụng phổ biến nhất
Để thống kê nhóm công việc chúng tôi sử dụng công cụ đếm từ của gói Word Cloud2. Gói này cho phép làm sạch, bỏ bớt các từ nối và hợp nhất các từ có cùng gốc (ví dụ số ít, số nhiều, các thời khác nhau của động từ). Đây chưa hẳn là cách phù hợp nhất để phân loại công việc theo ngành nghề, chúng tôi chỉ đơn giản đưa ra danh sách một số từ khóa được nhắc đến nhiều nhất trong tiêu đề công việc.
Nhóm các công việc liên quan đến tư vấn (Consultant), Quản lí (Manager), Hỗ trợ (Assistant), Officer và phát triển (Development) là nhóm 5 công việc chiếm tỉ trọng lớn nhất (hơn 26%). Bạn có thể click vào Word Cloud ở dưới để xem số lượng từ được thống kê.
```{r}
library(tm)
Corpus(VectorSource(job$job_name %>% rename_job_title())) %>%
tm_map(removeWords, c("for", "and", "the", "vietnam", "conduct")) %>%
TermDocumentMatrix() -> dtm
m <- as.matrix(dtm)
v <- sort(rowSums(m), decreasing = TRUE)
d <- data.frame(word = names(v), freq = v)
library(wordcloud2)
# top_job <- d %>% filter(freq >= 50, word != d$word[7])
# top_job$freq[1:5] %>% sum / top_job$freq %>% sum()
top_job <- d %>% filter(word != d$word[7])
set.seed(1)
wordcloud2(top_job,
color = "random-light",
backgroundColor = "black",
size = 0.7)
```
```{r}
top_job %>%
filter(!word %in% c("team", "with")) %>%
slice(1:30) %>%
mutate(word = str_to_upper(word)) %>%
ggplot(aes(reorder(word, freq), freq)) +
geom_col() +
coord_flip() +
geom_text(aes(label = freq), hjust = 1.1, color = "white", size = 3) +
theme_minimal() +
labs(x = NULL, y = NULL,
title = "30 most frequent job keyword",
caption = "Data Source: http://www.ngocentre.org.vn")
```
```{r}
# d %>%
#   slice(1:20) %>%
#   mutate(word = str_to_upper(word)) %>%
#   ggplot(aes(reorder(word, freq), freq)) +
#   geom_col() +
#   geom_text(aes(label = freq), hjust = 1.1, color = "white", size = 4) +
#   coord_flip() +
#   theme_minimal() +
#   theme(axis.title.x = element_blank(),
#         axis.text.x = element_blank(),
#         axis.ticks.x = element_blank()) +
#   labs(x = NULL, y = NULL,
#        title = "The Most Recruited Jobs by NGOs",
#        caption = "Data Source: http://www.ngocentre.org.vn")
```
# Địa điểm của công việc được tuyển dụng
Hà Nội và Thành Phố Hồ Chí Minh chiếm 67.4% tổng số công việc được tuyển dụng của các NGOs với số công việc được tuyển dụng lần lượt là 6123 và 979. Có thể thấy không chỉ có sự mất cân bằng về số lượng công việc được tuyển của hai thành phố lớn này so với phần còn lại và còn có sự bất đối xứng lớn giữa hai địa điểm có nhiều công việc được đăng tuyển nhất khi tỉ lệ chênh lệch là hơn 6 lần. Kết quả này cũng là dễ hiểu vì hầu hết các nhà tài trợ đều có trụ sở ở Hà Nội, sau đó mới đến Sài Gòn. Tuy vậy cũng có thể thấy vẫn có hơn 30% công việc được tuyển dụng cho các vị trí ở tỉnh. Ngoài ra số lượng việc đăng trên trang VUFO cũng không phản ảnh hết số việc được tuyển ở địa phương, thông thường các công việc này sẽ được tuyển dụng trực tiếp tại tỉnh thông qua các kênh tuyển dụng địa phương.
```{r, width = 2}
job$loc_name -> location
u <- location %>%
str_split(pattern = ",", simplify = TRUE) %>%
as.vector()
u[u == "Na"] <- NA
u %>%
str_trim() %>%
table() %>%
as.data.frame() -> u
names(u) <- c("word", "freq")
u %>%
arrange(-freq) %>%
slice(-1) %>%
filter(freq >= 10) -> p
# p$freq[c(1, 2)] %>% sum() / p$freq %>% sum()
# Hầu hết các job đều ở Hà Nội và Sài Gòn:
# wordcloud2(p,
#            color = "random-light",
#            backgroundColor = "black")
p %>%
slice(-c(1, 2)) %>%
slice(1:60) %>%
mutate(word = str_to_upper(word) %>% as.factor()) %>%
ggplot(aes(reorder(word, freq), freq)) +
geom_col() +
geom_text(aes(label = freq), hjust = 1.1, color = "white") +
coord_flip() +
theme_minimal() +
labs(x = NULL, y = NULL,
title = "Top 60 Locations for NGO Jobs",
caption = "Data Source: http://www.ngocentre.org.vn")
```
```{r}
# Nếu không tính đến hai thành phố này thì:
# wordcloud2(p %>% slice(-c(1, 2)),
#            color = "random-light",
#            backgroundColor = "black",
#            size = 0.4)
```
job$loc_name -> location
filter(!location %in% c("lao", "cambodia","myanmar","thail")) %>% location
job$loc_name -> location
location <- filter(!location %in% c("lao", "cambodia","myanmar","thail"))
location <- filter(!location %in% c("lao", "cambodia","myanmar","thail"))
head(location)
location <- filter(!location %in% c("lao", "cambodia","myanmar","thail")
u <- location %>%
location
u <- location %>%
str_split(pattern = ",", simplify = TRUE) %>%
as.vector()
u[u == "Na"] <- NA
u
u %>%
str_trim() %>%
table()
u %>%
str_trim() %>%
table() %>%
as.data.frame() -> u
u
job$loc_name -> location
u <- location %>%
str_split(pattern = ",", simplify = TRUE) %>%
as.vector()
u[u == "Na"] <- NA
u %>%
str_trim() %>%
table() %>%
as.data.frame() -> u
names(u) <- c("word", "freq")
u
u
write.csv("D:/ten_province.csv", row.names = FALSE)
p
p %>%
slice(-c(1, 2)) %>%
filter(word %in% c("Thailand", "Cambodia")) %>%
slice(1:60) %>%
mutate(word = str_to_upper(word) %>% as.factor()) %>%
ggplot(aes(reorder(word, freq), freq)) +
geom_col() +
geom_text(aes(label = freq), hjust = 1.1, color = "white") +
coord_flip() +
theme_minimal() +
labs(x = NULL, y = NULL,
title = "Top 60 Locations for NGO Jobs",
caption = "Data Source: http://www.ngocentre.org.vn")
p %>%
slice(-c(1, 2)) %>%
filter(!word %in% c("Thailand", "Cambodia")) %>%
slice(1:60) %>%
mutate(word = str_to_upper(word) %>% as.factor()) %>%
ggplot(aes(reorder(word, freq), freq)) +
geom_col() +
geom_text(aes(label = freq), hjust = 1.1, color = "white") +
coord_flip() +
theme_minimal() +
labs(x = NULL, y = NULL,
title = "Top 60 Locations for NGO Jobs",
caption = "Data Source: http://www.ngocentre.org.vn")
job %>%
group_by(yearJob) %>%
count() %>%
ungroup()-> job_by_year
rm(list = ls())
library(tidyverse)
library(magrittr)
library(lubridate)
library(stringr)
library(highcharter)
job <- read.csv("./NGO-Jobs-v4.csv")
jobDate <- function(x) {
x %>%
str_sub(start = 6, end = 16) %>%
ymd() %>%
return()
}
job %<>% mutate(time = jobDate(deadline),
yearJob = year(time),
org_name = as.character(org_name))
job %<>% filter(yearJob %in% c(2009:2017))
top30 <- job %>%
group_by(org_name) %>%
count() %>%
ungroup() %>%
arrange(-n) %>%
mutate_if(is.factor, character) %>%
slice(1:30)
job %>%
group_by(yearJob) %>%
count() %>%
ungroup()-> job_by_year
# highchart() %>%
#   hc_xAxis(categories = job_by_year$nam) %>%
#   hc_add_series(data = job_by_year$n,
#                 showInLegend = FALSE,
#                 type = "column",
#                 color = "#104E8B") %>%
#   hc_title(text = "The Number of Jobs from 2009 to 2017") %>%
#   hc_credits(enabled = TRUE,
#              text = "Data Source: http://www.ngocentre.org.vn",
#              style = list(fontSize = "12px")) %>%
#   hc_tooltip(valueDecimals = 0,
#              pointFormat = "Number: {point.y}") %>%
#   hc_add_theme(hc_theme_538())
# highchart() %>%
#   hc_xAxis(categories = top30$org_name) %>%
#   hc_add_series(data = top30$n,
#                 showInLegend = FALSE,
#                 type = "column",
#                 color = "#104E8B") %>%
#   hc_title(text = "Top 30 NGOs with The largest Number of Jobs from 2009 to 2017") %>%
#   hc_credits(enabled = TRUE,
#              text = "Data Source: http://www.ngocentre.org.vn",
#              style = list(fontSize = "12px")) %>%
#   hc_tooltip(valueDecimals = 0,
#              pointFormat = "Number: {point.y}") %>%
#   hc_add_theme(hc_theme_538())
u <- job %>%
group_by(org_name) %>%
count() %>%
ungroup() %>%
arrange(-n)
# u$org_name %>% unique() %>% length()
#u$n[1:20] %>% sum() / u$n %>% sum()
highchart() %>%
hc_xAxis(categories = top30$org_name[1:20]) %>%
hc_add_series(name = "Number of Jobs",
data = top30$n[1:20],
color = "#104E8B",
showInLegend = FALSE) %>%
hc_chart(type = "bar", options2d = list(enabled = TRUE, beta = 1, alpha = 1)) %>%
hc_title(text = "Top 20 NGOs with The largest Number of Jobs from 2009 to 2017") %>%
hc_credits(enabled = TRUE,
text = "Data Source: http://www.ngocentre.org.vn",
style = list(fontSize = "12px")) %>%
hc_add_theme(hc_theme_538())
# Top 5 tổ chức có nhiều việc nhất:
top30$org_name[1:5] -> top5_org
job %<>% mutate(org_name2 = case_when(org_name %in% top5_org ~ org_name,
!org_name %in% top5_org ~ "Others"))
org_rename <- function(x) {
case_when(x == top5_org[1] ~ "SNV",
x == top5_org[2] ~ "World Vision",
x == top5_org[5] ~ "CARE",
!x %in% top5_org[c(1, 2, 5)] ~ x)
}
job %>%
group_by(org_name2, nam) %>%
count() %>%
ungroup() -> top_5_cong1
top30$org_name[1:5] -> top5_org
job %<>% mutate(org_name2 = case_when(org_name %in% top5_org ~ org_name,
!org_name %in% top5_org ~ "Others"))
org_rename <- function(x) {
case_when(x == top5_org[1] ~ "SNV",
x == top5_org[2] ~ "World Vision",
x == top5_org[5] ~ "CARE",
!x %in% top5_org[c(1, 2, 5)] ~ x)
}
job %>%
group_by(org_name2, yearJob) %>%
count() %>%
ungroup() -> top_5_cong1
top_5_cong1$org_name2 <- org_rename(top_5_cong1$org_name2)
top_5_cong1 %>%
hchart(hcaes(nam, n, group = org_name2), type = "column", showInLegend = TRUE) %>%
hc_plotOptions(series = list(stacking = "normal")) %>%
hc_add_theme(hc_theme_sandsignika()) %>%
hc_yAxis(title = list(text = "")) %>%
hc_xAxis(title = list(text = "")) %>%
hc_title(text = "The Number of Jobs from 2009 to 2017") %>%
hc_credits(enabled = TRUE,
text = "Data Source: http://www.ngocentre.org.vn",
style = list(fontSize = "12px"))
top_5_cong1 %>%
hchart(hcaes(yearJob, n, group = org_name2), type = "column", showInLegend = TRUE) %>%
hc_plotOptions(series = list(stacking = "normal")) %>%
hc_add_theme(hc_theme_sandsignika()) %>%
hc_yAxis(title = list(text = "")) %>%
hc_xAxis(title = list(text = "")) %>%
hc_title(text = "The Number of Jobs from 2009 to 2017") %>%
hc_credits(enabled = TRUE,
text = "Data Source: http://www.ngocentre.org.vn",
style = list(fontSize = "12px"))
job %<>% mutate(thang = month(time, label = TRUE, abbr = TRUE))
job_thang_nam <- job %>%
group_by(nam, thang) %>%
count() %>%
ungroup() %>%
arrange(thang)
job_thang_nam <- job %>%
group_by(yearJob, thang) %>%
count() %>%
ungroup() %>%
arrange(thang)
job %>%
group_by(thang) %>%
count() -> viec_thang
highchart() %>%
hc_add_series(data = round(viec_thang %>% pull(n) / 9, 0), showInLegend = FALSE) %>%
hc_add_theme(hc_theme_538()) %>%
hc_yAxis(title = list(text = " ")) %>%
hc_xAxis(categories = viec_thang$thang %>% unique()) %>%
hc_title(text = "Average Jobs by Month") %>%
hc_subtitle(text = "Data Source: http://www.ngocentre.org.vn")
top10_ngo <- top30$org_name[1:10]
job %>%
filter(org_name %in% top10_ngo) %>%
group_by(org_name, thang) %>%
count() %>%
ungroup() -> top10_by_month
ten_top10 <- top10_by_month$org_name %>% unique()
rename_job_title <- function(x) {
x <- str_to_lower(x)
x %>%
str_replace_all("programme", "program") %>%
str_replace_all("consultancy|consultants", "consultant") %>%
str_replace_all("project|international|national|program", "")
}
library(tm)
Corpus(VectorSource(job$job_name %>% rename_job_title())) %>%
tm_map(removeWords, c("for", "and", "the", "vietnam", "conduct")) %>%
TermDocumentMatrix() -> dtm
m <- as.matrix(dtm)
v <- sort(rowSums(m), decreasing = TRUE)
d <- data.frame(word = names(v), freq = v)
library(wordcloud2)
# top_job <- d %>% filter(freq >= 50, word != d$word[7])
# top_job$freq[1:5] %>% sum / top_job$freq %>% sum()
top_job <- d %>% filter(word != d$word[7])
set.seed(1)
wordcloud2(top_job,
color = "random-light",
backgroundColor = "black",
size = 0.7)
